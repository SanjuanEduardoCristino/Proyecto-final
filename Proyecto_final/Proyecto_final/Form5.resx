<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAsJCQcJCQcJCQkJCwkJCQkJCQsJCwsMCwsLDA0QDBEODQ4M
        EhkSJRodJR0ZHxwpKRYlNzU2GioyPi0pMBk7IRP/2wBDAQcICAsJCxULCxUsHRkdLCwsLCwsLCwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCz/wAARCAC0ATMDASIAAhEBAxEB/8QA
        HAAAAQUBAQEAAAAAAAAAAAAABQACAwQGAQcI/8QARBAAAgEDAgMFBQQJAgUDBQAAAQIDAAQREiEFMUET
        IlFhcQYygZGhFEKxwRUjM1JicoLR4ZLwJDREVLIWQ2Nzk6LS8f/EABkBAQADAQEAAAAAAAAAAAAAAAAD
        BAUBAv/EACERAQADAAEFAAMBAAAAAAAAAAABAgMEBRESITETMkEi/9oADAMBAAIRAxEAPwCLickiyMyn
        eg8lwsv7aMkjbWhw39qPXcayPICQB1J5ULktrJSS0jt5IgA+ZP5UA9YyDrhkDL1UjS2PAg/3qdRmJ8dM
        kD8RSZrce4j+R1D8hXYmHezyO29BnJ5SshPUEjf5YqJGXUGU432B6eVW+I2ciSO6qWQ77b49aoRo2oet
        Bp7UqyPC3uzx7fzhSPqM1mLuBopJI2G6MV+XWjiSFOwPVdBHr1qC+jWde1H7Rdm8wDjNAEUFYpR01A/T
        FUmGCfKiQQ4lTxH4GqDqc70DV50StNXdB9B8eh8qHoMGr0B048OlAUiU6tuuVKnrXXs3APdPZnfx0+tS
        W7Qy6Q+Q+BhhzPz2onEssZGHVgOjAj50GXltHUnAOx5eFRrbNnkd+VbY2dlOASgjY7eEbH4bCo/0XCjY
        IIPPcfgRtQCbeFm0sc5AXJ/h6H8q1HZPDaoo/aKsYHgGADZ+f4VFa2Slo0A2LAfAkZ50e+xrJ3nIWNCz
        sSN8dKDPRcMmmOSwAY5J3O9XfsFhajM0zggYbGlTjrkudh8KocX9pLez121iRlQVZ1OXJ65fp8Kxd3xG
        7uiTJIxXOdOTpz6VNnla6O14q3jcb9m7XKo8khGx7E6s+rkAfWoR7UcHXJS1mBHVyp/E1552rZ5muGVv
        H51YjHOPqKb3n49GPtnCg7lu5Hm6j8FqaH27jYhWtI9/3nJHxwBXmyyZGM10E5/Cp442cx6R/lvD2BPa
        OzkhEj2i6CMns5WA+TA1Rn4xwmUFohMmM592THop0msG93NFw+OJWIYsdRzyU74qjBfSq2ksf4TnlUHK
        40Y9vF64+1tO/k1t9xCYgtFPE8e/uBhj1B3HxrPzX8zk5x6g1XeYs2pWIbxBP1pwTtcahhvFevqKorZh
        upujHFd+0SAbsTmp0sZZCFRSxz90EgetTPw11A1EZ6KNzQUftUmedSx3jjG/XypslkU3YonkTqc/0rUX
        ZqNlDHzbb6UBFOIypjLZXwNWUuUm5Ng+B/I0DYNmpI3IPp1oDeljzHxO1WI0Q4DMv+oH8KF293Mu2oFe
        WHxj5GiUVxbPjWqqfGM7f6T/AHoJ/skMhBEgz6Gp4rIKdpF+RFcjVCP1bxuegY6D8jt9aso0yc49PmAC
        D8aB32Ztu8v1pU/7RN5fIUqCxdqdTjzoc8WrOFc/SjE6jtG7uTzHQVUnlSJSWI26DYD5UA02x6pj1O9R
        9gvRyp9CR9KhuOIzFyEwq5xnYk/Oopbu+jEbrLs6sd1U7j1FWM+Npp+sIL8jOn2VxrGSdMAgsPdeM8vX
        G9CprGeF/wBZHv0YKAG+IqwnH7+2ZWeO2lxv349Jx/MhBotbe1vs3dYh4nZTQhtjLbMJlGepRgrfU161
        4uuX7QU3z0/WQB0JVeeRt8ajw3huRk+fQits/AbG+ga64PdwXtvgFuwb9ZHnkJI274+IrPXPD5oWIZCC
        uTuKqp2amXS2rp19DtVGZMlse8pOfhRu6hIeRcbEEr8d6FTKQc9evmRQUQMGrcW423I3x4+lV2AB25dK
        fGx6cxuB448KAlbyLsDtv15Ues58BVYakOwyf/FqzkTI5GrZujDkfWitmXQqBnB+RoNNDHGd422PNG5j
        8qtqjAaSAV6A7iqFsQQp+eNvpRBJFGMnqKC5bRKpUkb/AHR4edD/AGl4i9vatawnEkiZcjop8cdTyHxq
        9HJjc8ywHltvisfxe7M15eM+6tIy48l7oxQZKWZmY5PU1z3hT7uERynByj5ZG6EZpkYPLmK08J7+v4q3
        jshbbNR6jV94Cy5Aqq9vIu+k48RTfj6V9xHp3PSs/wBNjY6h57VfijJdfDmfQb1BbWs80irHHI5J+4pP
        z6VpYOFyRrqlwu242JA8zyrQ6fx9NI7zHpQ5vKzy9TPsIu8iLfrgChOSG+NGeIyRltK+6vdH96EEZNVu
        oTE6TEJuFP8AjvK1C2T5HejdjCJGUYz1xQO2jdmUAZ6bVreGxpAgaQ4OMgfeJ9KxpaMCIi7OLSNKkjBK
        8lz0HnVSSNVJGNIPVyA5+Aqw1wWGE7o6Y3PrmoSpJ3GfEmuOqzWsEm2wzUL8NcbrgjoOVEo4kJ+8fT+9
        WNIQEKu3mc/4oMzJYuM5GB1qq8ejuqK1rrbN76geYP5EVVksbSX3XAPmMUGaUMNzU6MwI3opJwtlyQ2R
        6Z/CqxtXXkAfQj86B8MuPebA88micF7bxgbTNy2DBR9c0GaKQEd04HlViNGIHwoDf6St/wDt3/8Auj/9
        aVCiDvSoNddHTrYc/wAKy3FLll7o5nPPpWtkUSB16nNZbidmS5JG2TXY+uSAC7y2GU4PhRq1jS7s7hRu
        9uBMvjozpcfgaFyxJDnC7+lS8LvTaXaSNns2DJKvRkcFSK2eFp42iZYvOzm1Z8Q/igKOByBUGgxkKnbp
        Wr4jDFKxTO25jbxU8qzVzayxE93bxFXup4Xm35Ke6ydP1rNIrb6s8M4zxLhlzHdWNzLBOhGGRtiP3XXk
        VPUEGvTuD8f4X7VoLO6jiteM6To07QXpAJPZZ3D9dOfTlgePaWzyq/Z9rGyuGZSrKyspKsrKcgqRyI6V
        g54W1ns1r6RSO7dcY4VLAzZTBQkf01lLmDZz4E16RwriKe0vCHNwQ3FOHqsd4cb3ETZEdxgePJ/MZ+9W
        V4jYCKSQfdbUD+Rqvas1nxlJExaO8MW4wTmmqfDbGDV2e3IZs8wSDVXTg+deXU0bE48dzj8cUStJnBGG
        28DyNC0B2x6/Gr9ucHPj+NBqraUdmW5d361KJm55oXay/q2XPTHzp3aN8PGgNLc/q3Od03/Ksffy4lmB
        z7zHPrvRtJcI4zzUUE4lEWIkHI7HyNANaSNwY391jlSeaN0I/P8AxVUs0TYPMct9iPEV2UHJ8qiLEjSR
        kdM1LTSafHi1Yt9XYbsrjcY653/GiUN9bbaoYif5R+dZwHBp4lYeNbPH6nfP6o68KujXJxSNFwoVR4KA
        B9BVK94vJKpRThcb4POgHbN4muNITUu3VtNI7R6VM+l50v5THeUkkpYkk0xAWOelNVSx35VKDjZRn8Kw
        r6TaWxSkVX7eXRjG34miqXDaV33O5x08BQOFWLDNFoEZhyPlUKQThkJFXIleRgFBNRWVlLKVwvl60XZY
        bNNAwZfvY3x69KBgSOIAMRqPh1pwUOG+lVsO7ajuTRCCJghJ543oKDRr1OKhYQj730ojLAG3Gx5HAqqb
        NvEf1bUEKyxpy1fL+9dM8BwGhVs/vAflT/scp5aT6EVIOH3DY7hz9KCNfsjbi3X/AFNTwsOCVgUeu9W4
        eGXAO/Zj1b+1EouFMw7zqNt9j+dAAx/8a0q0f6Gg/wC4X/TSoGRjvkdM1FxCy1p2ijb72BRT7GwJ2PPm
        edSomxjkHdbbJ6UHnl5YnJIHy3FBJo3jbka9F4hwxlZioyvMHyrN3Vi3e1LkeYqXPWaSivlF/rLSXL6A
        rE5XOnxFQfbZPdOCPMUWuuGq4Og6T0B5UFnsrmHOpGxnmBkfMVq06jaI/wAz2U44kV+wcbiEnJiTPkK4
        bkcgAPTYVVKuOlNwxrtubaY/j1+CrV+yPFDY8bsSSTDdluH3C9DHcYAOP4W0sPStbxmBe0kUgZBODWC4
        FZTNdW8pBxHIjg+Gk5zvW44jcCdXb7yNhvMHkay99PyX8lvOvjHZkOIQBTqx4g+oAwaByBQx3PPoK012
        wkhmzzRlPw3rPTacmoEiJW32GKtxNyqj2gGdqlSXlQGoJCM78xt6jerQdiQRsCMnpQeGU7fL41a7XSN6
        AgW23I+YqBwrAgkEEUOkuGAJB649KYt24xk0HZrJWJK7HyqjJZyrnbI8qJ9sHAPI0ws3qKAO0LDOxqIx
        t4UaOkjcCoWRN+6K73AsRsakWMczVp+zToD6VAWJ/wAbU7jmGOwGBU0cRPTemopOPzyaKWsS+9gkDlnb
        J8AK4H2lpI2DjAOwJ2/GtDYcNQ96SQhV7zkY2HxqpaQFiC23jjoKvyTDSIkOEB309SKC/wDaY417C1XQ
        g2LD329WrixhsZANVYVG25x57UYtYNWGb3Rz6Z+NByC1U4bTgdBV0QgDGwA5k5pNcQRDCjONs9BVSS8Z
        ugx8aCV2t1OD3j/DnH41XZ499MaZ896ha6bJBAI896Z9pgPvRlfMHFBLrkzyUD+UfjViJ36n5VWVoOY1
        DPXmPpVmJQ2MMDv/AL2oLsTcskn86mkaTSdPdHlXIoScEDwq52BK4x0zQBj2mT3zz8TSokbM5NKgqniV
        wWOWqeO91bNg1nPtLA8hg1ctnMjLpByaDSoYrhOzJHLuk/hQi9sQC2Vwatx5j0nO9FFSO8ixt2qjb+IU
        GDnsuewofJaqvvEY8K2F3ZFSwI33oLPaYJoM89lZMe8inz0/3pJw/h4ORCNupAxRKSIJk4zVfQzHLbIO
        n5UE0Aji0hAAD7oAxsKrvdAzNHnZ1KfHmKRmAMpG5RGJ8BgchQZpTrD531avrmglnkwsgPXXkeYxQCZt
        zjlmj18MF3HusuofGs/LzbwoIC1PRzyqMjypy4H5UF2F98GrkuTGjjxwfWhkbHJNEIJFYGN/dcYPkfGg
        gck6wPvLkeoquWOo4PLarboyMQd8H/GxqoygEgePWgesh338KsJIT/vnVMAA759Rip4w3Q6vTmPUUFjn
        uN6Yw6V0b88g1Mqo4w+4x4d4fGgpmMnzpotyx22PnRiC0RiMSZHgy70YteDpJhgUHi82yigzttYyNgsM
        L1Joxb2jFV0LsPvEbD0FH4+H8MixrM9yw+6g7KInzLZc/IVdELnCrHHAuAFVB38chue9QBlgaNNAB35k
        7E05LYH3nUfMn6Cj0fCZGGoxy8+cg0DP9W9WI+EFjzX0/wD5QCba0QlQCWPjpwPqaJSRsi6R02o1bcKM
        agkfHFOksGbp40GVlVs9ar6GzyNaWThrg+7n1FQHh46qR6dKDP8AZlt+o51EUmUnBI3rSjhjAjApw4Sz
        n9mT6c6ABbmQkBkQ/wBOn/xxRqzto3IwjA+RyPqKJWvs8xIJUqPOtDacMtrZQcAt4mgH2vDzpDMMLz3x
        k1a+yZ6YFEC0Y2A+WwpupjywKCl9hH+80qvZfxNKg8igjkncLGmrxPQep5UZRrXh64LB5yBkD3U+NCH4
        l2aYTCk+6F2A86oNeMxJOCeeTQaRb8O27H4chRSyv4wy9/cdawy3T5G9Ebe6K4Jb64xQejS28N/D2keO
        1A7wH3vOs5d2bKWBB8KfwrizxMu+V6+BFaSWG24hF2sJGsjJA55oMBLa78qE8QJj7i7enj41s7mzaNiG
        XHwrJcViIkkGPj5UGemk0Qzb7kafnzoX2hydxVu8OlSq8gfnQ4MxYDGRQGboarSNvFFI9CAaz0o3NaFi
        f0daN/Mn+knFApwAxI8aCma6KTeVdGdqCRRVhGxvnkahA7op6nB35GgsyuSoYcxsfTpVUuSR51Z05Cjx
        HdPQ+VRmA6sb9MfGgixnpufrTkAHeGfh0NWBbNsMb9KlW1kzsvrQOhAbGojyJxV+G0jcj9ZGvnq/I/3q
        GGzkJHdOB6fjRKC1C4LMox05j50Fu0sIEILShvARqT8zRqCG3yBpnfHJcaV+QFCI3gUjVMxA6RJt82P5
        UTt7uPICq2P4nP5UB21t4ttNugPP9YGO/qaJxQ3WMRqIx/8ACoT6rv8AWhdndREjuKPPB/EmtLZkuBg7
        bUEMPC2YhpDz5lizN9aJw2VvCBhcnxNTou2ak5UEZiU86XYx9QKkJppYeI+FAz7PCelc+yW3VAacZV6D
        PrTTK3p6UHRa2o/9tacFhTkqj0AqIuTTNR9KCwZByFRsXbxqPUfGnBm8T86DgVj0NSKhpLk1IKDmmlT6
        VB87tcMxJzSExO9VAWNSoDmguJISc1ZS4VNz3j0B5VSUEV1lYrtzBoDEPEZdsvpA5KNh9K0nC+OywuuG
        yNsjx9awUayFutF7XtFCjBzQepC4seKRZUhZsbqfHxFYzjtlKkjbEZG+PKo4ruW3VCGKsMEHO4om13Hx
        OAq+1wikqf3gKDzy6tiSwZfiNqHG20natbeQYY5H0oYbXU3LrvQRSR6OE2rEYzJNgemB/es3NzNa7i6d
        jZcNg6mKSYgeLucVlJlO9BSPOurzFIqcmnKhyKC1GoYYpxiPLFdhUjGaJRRK4oK8EJdWjPI99PJhzq7F
        ZuVWV1P6sZG3vs2dK/mf80QseHNPIiJuSRnA91TzJoleSWdowgQqzxjT3d9Hy2z40AJbMoA0rBM7nO7f
        AVIot1wApY+L8vkKlklDEnffyH44riSn91fVt/pQOAkbGkjHgMbfCumK4b3Ec9BhSakW80kKpGf4VUD5
        4qdLzUQsmvfxO30oKyWt0DlwVHgxxV6IFcLkZ67jNWoraOXBTGf4gD+NXIbG71DSUAyM7aT+FA+yjmZl
        0xSty3UMR9BW14VHKqjWpB8CQT9DQey4XcMVLFsebMRWntLcQqB1FBaHKka7XDQRsaiZs1KwqMrQR5rh
        p+jzpaKBufKl3Tzz86foNLQaDgQH73zH9qeEx1FdVDUgXFBxVxT6QrtBzFKu0qDwJbLhUf7XikBx0iik
        c1Mv/pxNu2vpf/pwxov/AOZJoDDDdzHEMEshzgaUJGfXl9aOWXBZ3Be8ura0iUZcswlkHlpQ6fm1BYST
        gRxpsr+Tze5ij/8AGM/jRbh/DYeI/wDKcCuZEHvSPeOIl/mkKhfrVH9KezHCRiyszxG5X/qeJnVAGAxl
        LZML880L4j7TcZ4gpSe6k7EbLBFiKBR4COPC/Sg2DcP9krLe/msY35mK1vLi4kHkSrBc/E139K+w0AAg
        tJJD+9K9xj/SD+deYtcuTkmrcbvgazpzjY+8fPHOg3zcb9mhkpaWynpptGlb5yyEU1OLWcrL2EhXBHdF
        rBF8Moc/WsWDsNzjzrTcD9neM3pSf7NKlvzVpQUDeeDvigu8QhJ7OeMZjm32xhX6ihoiKspcYJOw8B51
        sEsIIF+xSzxMZOgZT2b9GwDnHjQG9spopHVhhlOCOQ+FAA48wEkPdyqwIo+FZeaVM+5W3u7RbyLs32lU
        Hs2PXyNZK74fcQOVkjYYzg42PoaAWzrn3QKbmTpjHkKma3Y5GKlgt2Y4Izny5UEcCyMRuelF7K3nlfCn
        CjGpjyUVas+FFY+1nPZJ7xJHeIHQA02a+cZgs4xDCpwTjMjnxLGgMJeQ2sf2a1J1uMTTH3sH7qevU/Ch
        UsLqxYHmcgjcGu26O2CckkbmryQuwGocqCoI2KLtvnFNaCXopx5CigtzjBGOu9SJEi43J9NhQB4rW4Lb
        IefnRm04PdTFdSaV23Jx8qnE5j/ZoM+J3qZJLpxlpH0+AOB9KAtbcMtYNJlmXbG2Rn5ZzRq3+xJp7NQx
        6Z/zQC0ikYjIznrjetBa2sndJGnHjQEonkbAHdHgKvxqQMmoYIgoFWhtQKuHFdpbUDcDxppQU/FKgZpF
        LTT6WxoGYroFPpUHMY5UhXaVAqVLPmK5qHiKDtKm6j4UqD5zHELl1LzzOI+iIcavLA2qtPxCeXC6sIPd
        QHugVQllZj4Dpiow2aC2JSetd3aoUBOMUf4LwK94rKyRKiRRAPcXE50W8CdWkf8AKgFxRSMy9mp1E4Vs
        anJ/hHjWqsvZWeOJLvjN1Dwu1fDA3eWupQesVuvfPxqSXjfAPZ4GDgMKXnEVBWTi14gKoQf+khbYDwJr
        Lz8Q4hxC4ee6uJZ55DlnkYsx8t+lBuLTiPs3YSLHwXhguLhB3uIcYw5QAbtFbx7DxG4qSTiftNx55Y7e
        WZ7eI/r5Na29nCB1mkGlB6VnLWSw4db9rfapnl3S1jYp2o6CR172nxx86r3vGuIcRSOJ3WK0i/YWdsoi
        toh5RrsT5nJoNVDe+zvCSVN03FL/AK/ZgyWMTeUjbt64xRy2ubPjNtGl1mKXH6qYDbHTUfCsFwLhl1xS
        57ikW8OGuJDsoB5LnxP+9zW5urrhPA0+yoVm4gQNaAYWDbYP0Hkuc+NBTvOEXlo5Drleauu6sOYIIqsY
        O0XRPHkeOM4rQWXELiGySe9KG2mOUilAHvchGTvy3NXvsHDLwK0Ddm7qHEbkAkHqvQ0GGk4DC/fjQMDv
        3cZ+VK34PHG2ezZcEcxhifCtsvBpYj1A6HmPpVhbAY75Q4x93NBi7izZkK426/Dp6VSTgwkYlY8nqQNq
        9D/Rtud+zB+FcaxiUYGAB0wBQYyPhaQqBpGetONuF5DHnitS9jGeTIf6qiPDm6KD6EGgzIgOc86mS2Db
        FM+mxrQDhjdE/Cpk4dKPugUAOPhkR3bKjzIzV2KytU04iZyOrE4+QownDm6kD41ajsYl3LZoB8EcmwVE
        Qfwii1vbnbVnzzU8cMa40gcqnGAKBAYAFInFMeVF6jNVnujvgDIO460Fomm6vMVUWdJNg2ljnAY7Z8jT
        TOykq+/iP7UF3tB40u0XxqkXTYhiueXUelO1E7nl+8u4oLmvwrnaCqwY45/EU5Xzz+tBY113WKhyD/vN
        LvdPpQTax4iuEvzGD6VDyphLAjBI9KCUsd80wtzrolbkwDDz513Ebcgfgdx8DQRazSp+mP8AePyFKg+X
        23rqLXBVuzgluZoYIl1SSuqIo5kk0BngPCDxCVmllW3s7Ze2vbmT3IIhucDqx+6Ks8c9o45YRwng8bWv
        B4DhUz+tunHOa5YcyfDkKi45fw2VrFwKwcGGA672VT/zN1jvbj7q8hWTeRj1NBM8jE9antphGe0bcj3R
        4nzocXOedOEjDG/KgKyvLM/aMxYtvk0Z4Fwe54pcrCp7OJdLXE2MiKPyHVj90f2oHZdrMyQqpZ5GVUUd
        WJwBW0veIx8A4fHwuwdftkq67udcBtbDfT+AoCXFuPWXAYF4VwVVWaIFS6nV9nY7NI7cmmPjyXpvyEez
        tuvELi7ub2Vk4dw9DecTuGOcJuwjBPN3x/vNZRTPNKkUatJPNIscSLuzyOcBR61peL3UHDeAQcEs5A4l
        u2+2zp/1U0IHbSA/u6sJH5R/xUEN3xm/9o+MW0cYMcc9xDZ8OtV2SGJ3CKuB16sfyFb/AIdfQXfG+IQx
        EG14dbz2sZ6GOzKIXyPEhj8a849lCttdcT4y4GngfDLm7h1AEG9n/wCFtxv5sT8KK+yty0dn7Xz6jri4
        BdlWzvqdljBz55oNTb+2TW88amUtaux2fDER6tOoZ38TWpl47w+BoFukOiaMSRTQDUjqTjOOfn1r59mv
        pDIMMcKqoN/3RWw4dxRuJ8CubMsWveDj7Xbb957J8LKg/kOD6UHrkF1wu9H/AAt7GxP3deGH9Lb/AEqv
        d2VwQSpZh4g5FeM2vFGt1ed2Jd2KwrnqPvZHQVsOG+1HELOztZrq4ZnuSDawPuzQ5wZWB3weS+P4AbkS
        aNyHDAeecUkeQcnYHyNWrf2m4ZdDTdwAMDpLABhn44NXVl9nJ8ESRqfXT9DQUUnnBA1k1bR5GA3b51YC
        8AXf7RGP6q6b/gEIP61Wxj3d6DsSyHqx+NXUi0jU5AA3JJoPN7R2MYIgjLHxJAH03oDe+008moDSAPA7
        /Wg2M3E7SHuqdbfw8vnQ+bi0hjMiEYU95RzGeRrGHjDyKzBu8vvqeeD94fnT14moCvnuuCrDp4kEfhQa
        iDi0MzaJDpztk8h0qWW40v2UraWGDHIDtg7j4Vky6hzocbgEeh3BojBM1zCLdz+uiBa3bPNeZjJPzFAa
        1liRsJANRA92Rf3k8/GpEuFcKkh3HJjzHkaB2960REcuoqG9HiYHmp8avzjUn2iMhhjLFBhWHLWB/wCQ
        6UBDLIccwRuOhp6sVOVJx5bULiusqFZtxyPh6+VTrcEHS3MUBRJc+8NzzI/MVMqhtwR8OXxFUElFWEk3
        yDQTlSOfwP8AmnBm8fnSWQHnj/fjT9IPu4oFqB94fPf/ADS0KRtt6bimkkVzV1zQLs2HLf0pYI8jTxJ4
        /wCadkN5+uxoGan8vkKVPwngfrSoPlhTR3hbCyt7ziDY7RUMFtn99xuRQFCMiiN5MUt7O3U91EMjDPN3
        3JNBSmdnZmJJLEk5571VNPZqYTQcFOXnTc04NQaLgBiglmu5Bq+ywySqvi+NK/jQ+7uZLmVpnYszsWYk
        5ySedOs5T9lv0U7mHc+QOaoA5O52zvQFLO4NlG91n/iHVorTPOMMNLy+vML8TXLyXULOLO0Vuvzclyfq
        KGtM0jjPIYVR4AVNLIWmY522A9FGBQHY2Nr7K3JGzcU4vHGx6tFZx6sempqveyf6639srb70vsxfOg8W
        geOShV/KBwf2dt15Kt3O388sv9gKuex86xcYjjb9nd2l7YyZ6i5iMY+uKDKM2CfWr3COITcOv7a6Q50M
        VkXo8TjQ6EeYqrdRNDPPEww0bshB6FTg1CmFOSdh9aDR3cdlFdyXEhEllGO0hhBx2+rvJHkb6f3vl12q
        rxK4uLqS7nbUwIbGwXI7qIqjYAbYHgKoNctLCFJ3jzp/lPSq/alQAOedRx4+NBp/0qyiOMPsnekOd2Y8
        6t2/GZC7Rlu6cqPI42rGiZvH1q3BKQwkJ5AfE0Gun4xIkqojkBERWOfebSM08cYIMYZtyMnfx6VlTKXY
        Nnrk0jKzSEkn5+G1Bqm4g6tkMSp5b1XnuWY61Ox3oLFclhoY9cirKudxnYigux3LoVfJz4eIOxBq5HMC
        xTPclUaT+63Q/lQYsc8+m1XIG7od/dXPxPQUBgTskMeo7r3PPA3FWrW/kVlbPukHnz8qDGXWjDPPS49R
        tUlsSFJJwDuSeiig1plS4EjrhpIhqkHWSPnrHmOtWbC9WFwM6omPfQ49NS52zWTXiLwPDLC2CjbE+XiK
        vtKj9ldW5028xPaID+wlAyyeh5r5elBqbm1EJWaE6rebdCOQ8VNRrIcAHmvInw8KH8L43ACbO6Ja1m21
        HnG3IOKt3ayWc3ZuQVYB4nHuuh3DA0F6KUgAZq0k1Aku0z731qzHcKcYb60BxZqnjuCP7GgqTGp1m86A
        4sqSDHXw+98KaykDUpDL5cx6ihaSkdauxT6uZw3Q9D5GgfqpwY13uSZB7j/IGo2V0OCMfnQTdo3ifnSq
        HJpUHzGVCTSIM6VldBnngNipb0kyn0UfQUqVBTNcpUqDlKlSoL1iTm6XobWTP+pKrt1HnSpUHE5j1qQk
        6s0qVARvCTYcJJO+mcfJwBUdhNLDMJY2IeNdaHwZSCDSpUF32rjjj43xUIMBrhnIHLLgMcfOs6xPypUq
        BAkcq4TSpUHRVkE4A6UqVBNHnFObbNKlQOTpRCEkjBpUqCcgHT61PLsIlHLTnHnSpUEyDup6EVNKSBEo
        OFIyR50qVBEc4xnrRKwJLpAf2dwHWUeOlGdSPMHl/mlSoKyMwOx5E/StrCWufZx3mJeSyulit3PvLG8a
        uUJ8MnalSoM4ruSxLHr1q7bs+3ePzpUqAjFJIPvHnV6KSQ47xpUqC4hNXEHmaVKguxjVGxOcrgA9cVZi
        UONDbjGRnp6UqVAwxpk8+Z60qVKg/9k=
</value>
  </data>
</root>